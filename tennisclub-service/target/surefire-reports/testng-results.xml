<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="5" failed="2" total="8" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="3397" started-at="2017-11-26T18:11:14Z" finished-at="2017-11-26T18:11:17Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="3397" started-at="2017-11-26T18:11:14Z" finished-at="2017-11-26T18:11:17Z">
      <class name="com.frenchies.tennisclub.service.BookingServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="3" started-at="2017-11-26T19:11:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="setup" is-config="true" duration-ms="13" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.BookingServiceTest.getAllBookingsLastWeek()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="getAllBookingsLastWeek()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="getAllBookingsLastWeek" duration-ms="14" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBookingsLastWeek -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.BookingServiceTest.getAllBookingsLastWeek()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@5579bb86]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.frenchies.tennisclub.service.BookingServiceTest -->
      <class name="com.frenchies.tennisclub.service.BeanMappingServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@7a36aefa]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@7a36aefa]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="3" started-at="2017-11-26T19:11:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@7a36aefa]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="48" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.BeanMappingServiceTest.mapping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="mapping()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@7a36aefa]" name="mapping" duration-ms="86" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.frenchies.tennisclub.service.BeanMappingServiceTest.mapping(BeanMappingServiceTest.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapping -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@7a36aefa]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="8" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.BeanMappingServiceTest.mapping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@7a36aefa]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.frenchies.tennisclub.service.BeanMappingServiceTest -->
      <class name="com.frenchies.tennisclub.facade.BookingFacadeTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2017-11-26T19:11:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="setup" is-config="true" duration-ms="1" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.createBookingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="prepareTestBooking()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="prepareTestBooking" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <exception class="javax.validation.ConstraintViolationException">
            <message>
              <![CDATA[Validation failed for classes [com.frenchies.tennisclub.entity.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='may not be null', propertyPath=login, rootBeanClass=class com.frenchies.tennisclub.entity.User, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.validation.ConstraintViolationException: Validation failed for classes [com.frenchies.tennisclub.entity.User] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='may not be null', propertyPath=login, rootBeanClass=class com.frenchies.tennisclub.entity.User, messageTemplate='{javax.validation.constraints.NotNull.message}'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:160)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:95)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:214)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:92)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:492)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:197)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:181)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:216)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:334)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:289)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:195)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:126)
	at org.hibernate.jpa.event.internal.core.JpaPersistEventListener.saveWithGeneratedId(JpaPersistEventListener.java:84)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:206)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:149)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:75)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:811)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:784)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:789)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:291)
	at com.sun.proxy.$Proxy43.persist(Unknown Source)
	at com.frenchies.tennisclub.dao.UserDaoImpl.create(UserDaoImpl.java:27)
	at com.frenchies.tennisclub.service.UserServiceImpl.registerUser(UserServiceImpl.java:30)
	at com.frenchies.tennisclub.service.facade.UserFacadeImpl.createUser(UserFacadeImpl.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:317)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy49.createUser(Unknown Source)
	at com.frenchies.tennisclub.facade.BookingFacadeTest.prepareTestBooking(BookingFacadeTest.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- javax.validation.ConstraintViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareTestBooking -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.createBookingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="createBookingTest()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="createBookingTest" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.deleteBookingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="prepareTestBooking()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="prepareTestBooking" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareTestBooking -->
        <test-method status="SKIP" signature="deleteBookingTest()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="deleteBookingTest" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBookingTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.getAllBookingTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.getBookingsByDateTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="prepareTestBooking()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="prepareTestBooking" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareTestBooking -->
        <test-method status="SKIP" signature="getBookingsByDateTest()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="getBookingsByDateTest" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookingsByDateTest -->
        <test-method status="SKIP" signature="getAllBookingTest()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="getAllBookingTest" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBookingTest -->
        <test-method status="SKIP" signature="prepareTestBooking()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="prepareTestBooking" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareTestBooking -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="getBookingsByUserTest()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="getBookingsByUserTest" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookingsByUserTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.getBookingsByUserTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="prepareTestBooking()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@306279ee]" name="prepareTestBooking" is-config="true" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareTestBooking -->
      </class> <!-- com.frenchies.tennisclub.facade.BookingFacadeTest -->
      <class name="com.frenchies.tennisclub.service.CourtServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@376b4233]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="7" started-at="2017-11-26T19:11:14Z" finished-at="2017-11-26T19:11:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@376b4233]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2971" started-at="2017-11-26T19:11:14Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@376b4233]" name="setup" is-config="true" duration-ms="78" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@376b4233]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="FAIL" signature="changeType(com.frenchies.tennisclub.entity.Court, com.frenchies.tennisclub.enums.CourtType)[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@376b4233]" name="changeType" duration-ms="0" started-at="2017-11-26T19:11:17Z" finished-at="2017-11-26T19:11:17Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Method changeType requires 2 parameters but 0 were supplied in the @Test annotation.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Method changeType requires 2 parameters but 0 were supplied in the @Test annotation.
	at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:198)
	at org.testng.internal.Parameters.createParameters(Parameters.java:134)
	at org.testng.internal.Parameters.createParameters(Parameters.java:373)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:450)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1383)
	at org.testng.internal.Invoker.createParameters(Invoker.java:1075)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1180)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeType -->
      </class> <!-- com.frenchies.tennisclub.service.CourtServiceTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
