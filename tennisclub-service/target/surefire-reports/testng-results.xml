<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="2" total="13" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="3027" started-at="2017-11-27T12:54:33Z" finished-at="2017-11-27T12:54:36Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="3027" started-at="2017-11-27T12:54:33Z" finished-at="2017-11-27T12:54:36Z">
      <class name="com.frenchies.tennisclub.facade.UserFacadeTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="setup" is-config="true" duration-ms="13" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="10" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="authenticateTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="authenticateTest" duration-ms="3" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.frenchies.tennisclub.facade.UserFacadeTest.authenticateTest(UserFacadeTest.java:162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authenticateTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="createUserTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="createUserTest" duration-ms="5" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="findAllUserTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="findAllUserTest" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findAllUserTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="findUserByIdTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="findUserByIdTest" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findUserByIdTest -->
        <test-method status="PASS" signature="findUserByNameTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="findUserByNameTest" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findUserByNameTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="FAIL" signature="isAdminTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="isAdminTest" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.frenchies.tennisclub.facade.UserFacadeTest.isAdminTest(UserFacadeTest.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isAdminTest -->
        <test-method status="PASS" signature="init()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="init" is-config="true" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="updateUserTest()[pri:0, instance:com.frenchies.tennisclub.facade.UserFacadeTest@71248c21]" name="updateUserTest" duration-ms="2" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUserTest -->
      </class> <!-- com.frenchies.tennisclub.facade.UserFacadeTest -->
      <class name="com.frenchies.tennisclub.service.UserServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="8" started-at="2017-11-27T13:54:33Z" finished-at="2017-11-27T13:54:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2878" started-at="2017-11-27T13:54:33Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="setup" is-config="true" duration-ms="76" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.UserServiceTest.changeCourtType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="init()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <exception class="javax.persistence.TransactionRequiredException">
            <message>
              <![CDATA[No transactional EntityManager available]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.persistence.TransactionRequiredException: No transactional EntityManager available
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:275)
	at com.sun.proxy.$Proxy43.persist(Unknown Source)
	at com.frenchies.tennisclub.dao.CourtDaoImpl.create(CourtDaoImpl.java:28)
	at com.frenchies.tennisclub.service.CourtServiceImpl.createCourt(CourtServiceImpl.java:31)
	at com.frenchies.tennisclub.service.UserServiceTest.init(UserServiceTest.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:115)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:204)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:107)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:112)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- javax.persistence.TransactionRequiredException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="changeCourtType()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="changeCourtType" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeCourtType -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.UserServiceTest.changeCourtType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="createUserValidTest()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="createUserValidTest" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUserValidTest -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.UserServiceTest@6166e06f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[void com.frenchies.tennisclub.service.UserServiceTest.createUserValidTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.frenchies.tennisclub.service.UserServiceTest -->
      <class name="com.frenchies.tennisclub.service.BookingServiceTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="getAllBookingsLastWeek()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="getAllBookingsLastWeek" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllBookingsLastWeek -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="setup" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BookingServiceTest@23bb8443]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.BookingServiceTest.getAllBookingsLastWeek()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.frenchies.tennisclub.service.BookingServiceTest -->
      <class name="com.frenchies.tennisclub.service.BeanMappingServiceTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@10b48321]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@10b48321]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@10b48321]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@10b48321]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.BeanMappingServiceTest.mapping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="mapping()[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@10b48321]" name="mapping" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mapping -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.BeanMappingServiceTest@10b48321]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
      </class> <!-- com.frenchies.tennisclub.service.BeanMappingServiceTest -->
      <class name="com.frenchies.tennisclub.facade.BookingFacadeTest">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@16267862]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@16267862]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="test()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@16267862]" name="test" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@16267862]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@16267862]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.facade.BookingFacadeTest@16267862]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.facade.BookingFacadeTest.test()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.frenchies.tennisclub.facade.BookingFacadeTest -->
      <class name="com.frenchies.tennisclub.service.CourtServiceTest">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="setup" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="init()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="init" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="changeCourtType()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="changeCourtType" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- changeCourtType -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.frenchies.tennisclub.service.CourtServiceTest.changeCourtType()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.frenchies.tennisclub.service.CourtServiceTest@6b0c2d26]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-27T13:54:36Z" finished-at="2017-11-27T13:54:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.frenchies.tennisclub.service.CourtServiceTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
