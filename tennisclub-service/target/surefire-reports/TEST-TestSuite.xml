<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="TestSuite" time="3.455" tests="31" errors="0" skipped="23" failures="3">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.151-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/val/Documents/M2_Masaryk/Java/Seminars/project/tennisClub/tennisclubproject"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/val/Documents/M2_Masaryk/Java/Seminars/project/tennisClub/tennisclubproject"/>
    <property name="java.runtime.version" value="1.8.0_151-8u151-b12-0ubuntu0.16.04.2-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.10.0-38-generic"/>
    <property name="user.home" value="/home/val"/>
    <property name="user.timezone" value="Europe/Prague"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="val"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_151"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="init" classname="com.frenchies.tennisclub.service.UserServiceTest" time="3.443">
    <failure message="No transactional EntityManager available" type="javax.persistence.TransactionRequiredException">javax.persistence.TransactionRequiredException: No transactional EntityManager available
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:275)
	at com.sun.proxy.$Proxy43.persist(Unknown Source)
	at com.frenchies.tennisclub.dao.CourtDaoImpl.create(CourtDaoImpl.java:28)
	at com.frenchies.tennisclub.service.CourtServiceImpl.createCourt(CourtServiceImpl.java:31)
	at com.frenchies.tennisclub.service.UserServiceTest.init(UserServiceTest.java:64)
</failure>
    <system-out><![CDATA[Configuring TestNG with: TestNG652Configurator
2017-11-27 13:54:36,568 WARN  org.dozer.config.GlobalSettings - Dozer configuration file not found: dozer.properties.  Using defaults for all Dozer global properties.
]]></system-out>
  </testcase>
  <testcase name="changeCourtType" classname="com.frenchies.tennisclub.service.UserServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestMethod" classname="com.frenchies.tennisclub.service.UserServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="init" classname="com.frenchies.tennisclub.service.UserServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="createUserValidTest" classname="com.frenchies.tennisclub.service.UserServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestClass" classname="com.frenchies.tennisclub.service.CourtServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextPrepareTestInstance" classname="com.frenchies.tennisclub.service.CourtServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="setup" classname="com.frenchies.tennisclub.service.CourtServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestMethod" classname="com.frenchies.tennisclub.service.CourtServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="init" classname="com.frenchies.tennisclub.service.CourtServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="changeCourtType" classname="com.frenchies.tennisclub.service.CourtServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestClass" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextPrepareTestInstance" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestMethod" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="mapping" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestClass" classname="com.frenchies.tennisclub.service.BookingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextPrepareTestInstance" classname="com.frenchies.tennisclub.service.BookingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="setup" classname="com.frenchies.tennisclub.service.BookingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestMethod" classname="com.frenchies.tennisclub.service.BookingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="getAllBookingsLastWeek" classname="com.frenchies.tennisclub.service.BookingServiceTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestClass" classname="com.frenchies.tennisclub.facade.BookingFacadeTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextPrepareTestInstance" classname="com.frenchies.tennisclub.facade.BookingFacadeTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="springTestContextBeforeTestMethod" classname="com.frenchies.tennisclub.facade.BookingFacadeTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="test" classname="com.frenchies.tennisclub.facade.BookingFacadeTest" time="0">
    <skipped/>
  </testcase>
  <testcase name="authenticateTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.002">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.frenchies.tennisclub.facade.UserFacadeTest.authenticateTest(UserFacadeTest.java:162)
</failure>
  </testcase>
  <testcase name="createUserTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.004"/>
  <testcase name="findAllUserTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.001"/>
  <testcase name="findUserByIdTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.001"/>
  <testcase name="findUserByNameTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.001"/>
  <testcase name="isAdminTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.001">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.frenchies.tennisclub.facade.UserFacadeTest.isAdminTest(UserFacadeTest.java:157)
</failure>
  </testcase>
  <testcase name="updateUserTest" classname="com.frenchies.tennisclub.facade.UserFacadeTest" time="0.002"/>
</testsuite>