<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="val-Inspiron-7548" name="Surefire test" tests="13" failures="2" timestamp="27 Nov 2017 12:54:36 GMT" time="3.027" errors="0">
  <testcase name="@BeforeMethod init" time="0.0" classname="com.frenchies.tennisclub.service.UserServiceTest">
    <failure type="javax.persistence.TransactionRequiredException" message="No transactional EntityManager available">
      <![CDATA[javax.persistence.TransactionRequiredException: No transactional EntityManager available
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:275)
	at com.sun.proxy.$Proxy43.persist(Unknown Source)
	at com.frenchies.tennisclub.dao.CourtDaoImpl.create(CourtDaoImpl.java:28)
	at com.frenchies.tennisclub.service.CourtServiceImpl.createCourt(CourtServiceImpl.java:31)
	at com.frenchies.tennisclub.service.UserServiceTest.init(UserServiceTest.java:64)
... Removed 30 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.frenchies.tennisclub.service.UserServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod init" time="0.0" classname="com.frenchies.tennisclub.service.UserServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.frenchies.tennisclub.service.CourtServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.frenchies.tennisclub.service.CourtServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeClass setup" time="0.0" classname="com.frenchies.tennisclub.service.CourtServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass setup -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.frenchies.tennisclub.service.CourtServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod init" time="0.0" classname="com.frenchies.tennisclub.service.CourtServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod init -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.frenchies.tennisclub.service.BookingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.frenchies.tennisclub.service.BookingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeClass setup" time="0.0" classname="com.frenchies.tennisclub.service.BookingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeClass setup -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.frenchies.tennisclub.service.BookingServiceTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeClass springTestContextBeforeTestClass" time="0.0" classname="com.frenchies.tennisclub.facade.BookingFacadeTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextBeforeTestClass -->
  <testcase name="@BeforeClass springTestContextPrepareTestInstance" time="0.0" classname="com.frenchies.tennisclub.facade.BookingFacadeTest">
    <skipped/>
  </testcase> <!-- @BeforeClass springTestContextPrepareTestInstance -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="com.frenchies.tennisclub.facade.BookingFacadeTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="changeCourtType" time="0.0" classname="com.frenchies.tennisclub.service.UserServiceTest">
    <skipped/>
  </testcase> <!-- changeCourtType -->
  <testcase name="createUserValidTest" time="0.0" classname="com.frenchies.tennisclub.service.UserServiceTest">
    <skipped/>
  </testcase> <!-- createUserValidTest -->
  <testcase name="changeCourtType" time="0.001" classname="com.frenchies.tennisclub.service.CourtServiceTest">
    <skipped/>
  </testcase> <!-- changeCourtType -->
  <testcase name="mapping" time="0.0" classname="com.frenchies.tennisclub.service.BeanMappingServiceTest">
    <skipped/>
  </testcase> <!-- mapping -->
  <testcase name="getAllBookingsLastWeek" time="0.0" classname="com.frenchies.tennisclub.service.BookingServiceTest">
    <skipped/>
  </testcase> <!-- getAllBookingsLastWeek -->
  <testcase name="test" time="0.0" classname="com.frenchies.tennisclub.facade.BookingFacadeTest">
    <skipped/>
  </testcase> <!-- test -->
  <testcase name="authenticateTest" time="0.003" classname="com.frenchies.tennisclub.facade.UserFacadeTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at com.frenchies.tennisclub.facade.UserFacadeTest.authenticateTest(UserFacadeTest.java:162)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- authenticateTest -->
  <testcase name="createUserTest" time="0.005" classname="com.frenchies.tennisclub.facade.UserFacadeTest"/>
  <testcase name="findAllUserTest" time="0.001" classname="com.frenchies.tennisclub.facade.UserFacadeTest"/>
  <testcase name="findUserByIdTest" time="0.001" classname="com.frenchies.tennisclub.facade.UserFacadeTest"/>
  <testcase name="findUserByNameTest" time="0.001" classname="com.frenchies.tennisclub.facade.UserFacadeTest"/>
  <testcase name="isAdminTest" time="0.001" classname="com.frenchies.tennisclub.facade.UserFacadeTest">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at com.frenchies.tennisclub.facade.UserFacadeTest.isAdminTest(UserFacadeTest.java:157)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- isAdminTest -->
  <testcase name="updateUserTest" time="0.002" classname="com.frenchies.tennisclub.facade.UserFacadeTest"/>
</testsuite> <!-- Surefire test -->
